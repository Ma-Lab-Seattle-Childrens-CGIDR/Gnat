% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dirac.R
\name{dirac.compare_phenotype.shuffle}
\alias{dirac.compare_phenotype.shuffle}
\title{Compare two shuffled phenotypes rankings using the conservation index}
\usage{
dirac.compare_phenotype.shuffle(
  i,
  rank_matrix,
  combined,
  p1.size,
  p2.size,
  replace = TRUE
)
}
\arguments{
\item{i}{Integer, represents the bootstrap iteration currently being
performed. Mostly ensures compatibility with apply function.}

\item{rank_matrix}{Boolean matrix, columns represent the rank vector for
a given sample}

\item{combined}{Numeric Vector, represents the combined indices for
both phenotypes.}

\item{p1.size, p2.size}{Integer, represents the size of phenotype1, and
phenotype2 respectively}

\item{replace}{Whether the sampling should be done with replacement. If it is
TRUE, then two samples of size p1.size and p2.size respectively are taken
with replacement from combined (these two samples can overlap). If FALSE,
then a sample of size p1.size is taken without replacement from combined,
and the remainder of combined is taken as the other sample.}
}
\value{
Float, absolute difference in rank conservation index between the
two phenotypes for a given gene network (implied by rank_matrix)
}
\description{
\code{dirac.compare_phenotype.shuffle}computes the absolute difference between the
rank conservation index for a gene network between two shuffled phenotypes.
}
\examples{
#example code
}
